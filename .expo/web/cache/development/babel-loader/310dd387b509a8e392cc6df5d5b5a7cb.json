{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dabit/opensource/aws-amplify-auth-starters/src/nav/auth/SignIn.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Auth } from 'aws-amplify';\nimport { Input, ActionButton } from \"../../components\";\n\nvar SignIn = function (_Component) {\n  _inherits(SignIn, _Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn() {\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      password: ''\n    };\n\n    _this.onChangeText = function (key, value) {\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.signIn = function _callee() {\n      var _this$state, username, password;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, username = _this$state.username, password = _this$state.password;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Auth.signIn(username, password));\n\n            case 4:\n              console.log('successfully signed in');\n\n              _this.props.updateAuth('MainNav');\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('error signing in...', _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this.showForgotPassword = function () {\n      _this.props.toggleAuthType('showForgotPassword');\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, React.createElement(Input, {\n        onChangeText: this.onChangeText,\n        type: \"username\",\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }), React.createElement(Input, {\n        onChangeText: this.onChangeText,\n        type: \"password\",\n        placeholder: \"Password\",\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }), React.createElement(ActionButton, {\n        title: \"Sign In\",\n        onPress: this.signIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableHighlight, {\n        onPress: this.showForgotPassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, \"Forget your password?\"))));\n    }\n  }]);\n\n  return SignIn;\n}(Component);\n\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    paddingTop: 15,\n    justifyContent: 'center',\n    flexDirection: 'row'\n  }\n});\nexport default SignIn;","map":{"version":3,"sources":["/Users/dabit/opensource/aws-amplify-auth-starters/src/nav/auth/SignIn.js"],"names":["React","Component","Auth","Input","ActionButton","SignIn","state","username","password","onChangeText","key","value","setState","signIn","console","log","props","updateAuth","showForgotPassword","toggleAuthType","styles","buttonContainer","StyleSheet","create","paddingTop","justifyContent","flexDirection"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;AAGA,SAASC,IAAT,QAAqB,aAArB;AAEA,SAASC,KAAT,EAAgBC,YAAhB;;IAEMC,M;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;UAIRC,Y,GAAe,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC7B,YAAKC,QAAL,qBAAiBF,GAAjB,EAAuBC,KAAvB;AACD,K;;UACDE,M,GAAS;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4BACwB,MAAKP,KAD7B,EACCC,QADD,eACCA,QADD,EACWC,QADX,eACWA,QADX;AAAA;AAAA;AAAA,+CAGCN,IAAI,CAACW,MAAL,CAAYN,QAAZ,EAAsBC,QAAtB,CAHD;;AAAA;AAILM,cAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,oBAAKC,KAAL,CAAWC,UAAX,CAAsB,SAAtB;;AALK;AAAA;;AAAA;AAAA;AAAA;AAOLH,cAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAPK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UAUTG,kB,GAAqB,YAAM;AACzB,YAAKF,KAAL,CAAWG,cAAX,CAA0B,oBAA1B;AACD,K;;;;;;;6BACQ;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,YAAY,EAAE,KAAKV,YADrB;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,KAAD;AACE,QAAA,YAAY,EAAE,KAAKA,YADrB;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,WAAW,EAAC,UAHd;AAIE,QAAA,eAAe,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAYE,oBAAC,YAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAE,KAAKI,MAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEO,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD;AAAoB,QAAA,OAAO,EAAE,KAAKH,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,CADF,CAhBF,CADF;AAwBD;;;;EA9CkBjB,S;;AAiDrB,IAAMmB,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC/BF,EAAAA,eAAe,EAAE;AACfG,IAAAA,UAAU,EAAE,EADG;AAEfC,IAAAA,cAAc,EAAE,QAFD;AAGfC,IAAAA,aAAa,EAAE;AAHA;AADc,CAAlB,CAAf;AAQA,eAAerB,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text, TouchableHighlight, StyleSheet } from 'react-native'\n\nimport { Auth } from 'aws-amplify'\n\nimport { Input, ActionButton } from '../../components'\n\nclass SignIn extends Component {\n  state = {\n    username: '',\n    password: '',\n  }\n  onChangeText = (key, value) => {\n    this.setState({ [key]: value })\n  }\n  signIn = async () => {\n    const { username, password } = this.state\n    try {\n      await Auth.signIn(username, password)\n      console.log('successfully signed in')\n      this.props.updateAuth('MainNav')\n    } catch (err) {\n      console.log('error signing in...', err)\n    }\n  }\n  showForgotPassword = () => {\n    this.props.toggleAuthType('showForgotPassword')\n  }\n  render() {\n    return (\n      <View>\n        <Input\n          onChangeText={this.onChangeText}\n          type='username'\n          placeholder='Username'\n        />\n        <Input\n          onChangeText={this.onChangeText}\n          type='password'\n          placeholder='Password'\n          secureTextEntry\n        />\n        <ActionButton\n          title='Sign In'\n          onPress={this.signIn}\n        />\n        <View style={styles.buttonContainer}>\n          <TouchableHighlight onPress={this.showForgotPassword}>\n            <Text>Forget your password?</Text>\n          </TouchableHighlight>\n        </View>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    paddingTop: 15,\n    justifyContent: 'center',\n    flexDirection: 'row'\n  }\n})\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}