{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/dabit/opensource/aws-amplify-auth-starters/src/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Auth from \"./nav/auth/Auth\";\nimport Initializing from \"./nav/Initializing\";\nimport MainNav from \"./nav/main/MainNav\";\nimport { Auth as AmplifyAuth } from 'aws-amplify';\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentView: 'initializing'\n    };\n\n    _this.updateAuth = function (currentView) {\n      _this.setState({\n        currentView: currentView\n      });\n    };\n\n    _this.checkAuth = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AmplifyAuth.currentAuthenticatedUser());\n\n            case 3:\n              console.log('user is signed in');\n\n              _this.setState({\n                currentView: 'mainNav'\n              });\n\n              _context.next = 11;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('user is not signed in');\n\n              _this.setState({\n                currentView: 'auth'\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkAuth();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var currentView = this.state.currentView;\n      console.log('currentView: ', currentView);\n      return React.createElement(React.Fragment, null, currentView === 'initializing' && React.createElement(Initializing, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 45\n        }\n      }), currentView === 'auth' && React.createElement(Auth, {\n        updateAuth: this.updateAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 37\n        }\n      }), currentView === 'mainNav' && React.createElement(MainNav, {\n        updateAuth: this.updateAuth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 40\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/dabit/opensource/aws-amplify-auth-starters/src/App.js"],"names":["React","Auth","Initializing","MainNav","AmplifyAuth","App","state","currentView","updateAuth","setState","checkAuth","currentAuthenticatedUser","console","log","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,OAAOC,OAAP;AAEA,SAASF,IAAI,IAAIG,WAAjB,QAAoC,aAApC;;IAEMC,G;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;UAMRC,U,GAAa,UAACD,WAAD,EAAiB;AAC5B,YAAKE,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAXA;AAAF,OAAd;AACD,K;;UACDG,S,GAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEFN,WAAW,CAACO,wBAAZ,EAFE;;AAAA;AAGRC,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AACA,oBAAKJ,QAAL,CAAc;AAAEF,gBAAAA,WAAW,EAAE;AAAf,eAAd;;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRK,cAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AACA,oBAAKJ,QAAL,CAAc;AAAEF,gBAAAA,WAAW,EAAE;AAAf,eAAd;;AAPQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;wCANQ;AAClB,WAAKG,SAAL;AACD;;;6BAcQ;AAAA,UACCH,WADD,GACiB,KAAKD,KADtB,CACCC,WADD;AAEPK,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,WAA7B;AACA,aACE,0CACIA,WAAW,KAAK,cAAhB,IAAkC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADtC,EAEIA,WAAW,KAAK,MAAhB,IAA0B,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAF9B,EAGID,WAAW,KAAK,SAAhB,IAA6B,oBAAC,OAAD;AAAS,QAAA,UAAU,EAAE,KAAKC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHjC,CADF;AAOD;;;;EA9BeR,KAAK,CAACc,S;;AAiCxB,eAAeT,GAAf","sourcesContent":["import React from 'react'\n\nimport Auth from './nav/auth/Auth'\nimport Initializing from './nav/Initializing'\nimport MainNav from './nav/main/MainNav'\n\nimport { Auth as AmplifyAuth } from 'aws-amplify'\n\nclass App extends React.Component {\n  state = {\n    currentView: 'initializing'\n  }\n  componentDidMount() {\n    this.checkAuth()\n  }\n  updateAuth = (currentView) => {\n    this.setState({ currentView })\n  }\n  checkAuth = async () => {\n    try {\n      await AmplifyAuth.currentAuthenticatedUser()\n      console.log('user is signed in')\n      this.setState({ currentView: 'mainNav' })\n    } catch (err) {\n      console.log('user is not signed in')\n      this.setState({ currentView: 'auth' })\n    }\n  }\n  render() {\n    const { currentView } = this.state\n    console.log('currentView: ', currentView)\n    return (\n      <>\n        { currentView === 'initializing' && <Initializing />}\n        { currentView === 'auth' && <Auth updateAuth={this.updateAuth} />}\n        { currentView === 'mainNav' && <MainNav updateAuth={this.updateAuth} />}\n      </>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}